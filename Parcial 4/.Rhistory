df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df$dia = replicate(length(df$ano), '13')
df$dia = replicate(length(df$ano), '13')
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df = df[order(df$date),] # ordenando por fecha mas vieja
df = df[order(df$date),] # ordenando por fecha mas vieja
mod1 = auto.arima(df$sacrificio_totales)
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df = df[order(df$date),] # ordenando por fecha mas vieja
library(tidyverse)
library(lubridate)
datos <- read.csv("Nacidos_Vivos_en_Hospital_Manuel_Uribe_Angel.csv")
datos$FECHA.NACIMIENTO <- gsub(" \\d+:\\d+:\\d+ .*", "", datos$FECHA.NACIMIENTO)
datos$FECHA.NACIMIENTO <- as.Date(datos$FECHA.NACIMIENTO, format = "%m/%d/%Y")
datos <- datos %>%
mutate(Anio = year(FECHA.NACIMIENTO), semana = week(FECHA.NACIMIENTO)) %>%
group_by(Anio, semana) %>%
summarise(ratio = sum(SEXO != "MASCULINO")/sum(SEXO == "MASCULINO"))
lambda <- forecast::BoxCox.lambda(datos$ratio)
datos$ratio <- forecast::BoxCox(datos$ratio, lambda)
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df$dia = replicate(length(df$ano), '13')
df$dia = replicate(length(df$ano), '13')
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df %>% head()
View(df)
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df %>% head()
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';',header = T)
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';',header = T)
df = clean_names(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';',header = T)
df = clean_names(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';',header = T)
df = clean_names(df)
df %>% head()
knitr::opts_chunk$set(echo = TRUE)
df %>% head()
knitr::opts_chunk$set(echo = TRUE)
df = read.csv('cerdos.csv', sep = ';')
View(df)
knitr::opts_chunk$set(echo = TRUE)
mod1 = auto.arima(df$sacrificio_totales)
require(forecast)
mod1 = auto.arima(df$sacrificio_totales)
mod1 = auto.arima(df$sacrificio_totales)
mod1 = auto.arima(df$sacrificio_totales)
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
require(tidyverse)
require(latticeExtra)
require(datetime)
library(lubridate)
library(readxl)
require(forecast)
require(readr)
require(janitor)
df = read_delim("cerdos.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
df = clean_names(df)
df %>% names()
df$mes %>% unique() # Se verifica que no estén repetidos valores
df$mes =as.factor(df$mes)
df$mes %>% levels# Se convierte en factor, cambia el orden
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df$ano = df$ano %>% as.character()
df$date = paste(df$dia,df$mes,df$ano,sep = '-')
df$date = as.Date(df$date, format = '%d-%m-%Y')
# Con esto, se tiene la base de datos lista para trabajar
df = df[order(df$date),] # ordenando por fecha mas vieja
xyplot(sacrificios_porcinos_machos+ sacrificio_porcinos_hembras ~ date, df, type = "l", col=c("steelblue", "#69b3a2") , lwd=2)
require(ggplot2)
require(hrbrthemes)
x = df$date
y = df$sacrificio_totales
# plot
ggplot(df, aes(x=date,y=sacrificio_totales))+
geom_line(color = '#69b3a2', size = 1.5, alpha = 0.9)+
theme_ipsum()+
ggtitle('Total de sacrificios porcinos')
mod1 = auto.arima(df$sacrificio_totales)
summary(mod1)
require(forecast)
mod1 = auto.arima(df$sacrificio_totales)
a= summary(mod1)
kableExtra::kable(a)
require(kableExtra)
mod1 %>% kable()
mod1 = auto.arima(df$sacrificio_totales)
mod1 %>% kable()
mod1 = auto.arima(df$sacrificio_totales)
mod1 %>% summary()
# --> construct separate plots for each series
obj1 <- xyplot(sacrificios_porcinos_machos ~ date, df, type = "l" , lwd=2)
obj2 <- xyplot(sacrificio_porcinos_hembras ~ date, df, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios_porcinos_machos", "sacrificio_porcinos_hembras") , add.ylab2 = TRUE)
acf(omit.na(diff(df$sacrificio_totales)))
acf(na.omit(diff(df$sacrificio_totales)))
Diferencias.modelo = na.omit(diff(df$sacrificio_totales))
acf(Diferencias.modelo)
pacf(df$sacrificio_totales) # ¿No es un buen problema?
dim(df)
plot(Diferencias.modelo, type = 'l')
class(df2)
df2 =cerditos_2_la_venganza
cerditos_2_la_venganza <- read_excel("cerditos 2 la venganza.xls",
sheet = "Cuadro 3", skip = 9)
cerditos_2_la_venganza <- read_excel("cerditos 2 la venganza.xls",
sheet = "Cuadro 3", skip = 9)
df2 =cerditos_2_la_venganza
df2 =cerditos_2_la_venganza
df2 = cerditos_2_la_venganza
df2 = df2 %>% clean_names()
df2 %>% class
# --> construct separate plots for each series
obj1 <- xyplot(machos ~ date, df2, type = "l" , lwd=2)
# --> construct separate plots for each series
obj1 <- xyplot(machos ~ date, df2, type = "l" , lwd=2)
# --> construct separate plots for each series
obj1 <- xyplot(machos ~ fecha, df2, type = "l" , lwd=2)
obj2 <- xyplot(hembras ~ fecha, df2, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios_porcinos_machos", "sacrificio_porcinos_hembras") , add.ylab2 = TRUE)
# --> construct separate plots for each series
obj1 <- xyplot(machos/100000 ~ fecha, df2, type = "l" , lwd=2)
obj2 <- xyplot(hembras/100000 ~ fecha, df2, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios_porcinos_machos", "sacrificio_porcinos_hembras") , add.ylab2 = TRUE)
# --> construct separate plots for each series
obj1 <- xyplot(machos/100000 ~ fecha, df2, type = "l" , lwd=2)
obj2 <- xyplot(hembras/100000 ~ fecha, df2, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios porcinos machos", "sacrificio porcinos hembras") , add.ylab2 = TRUE)
df2$t_cabezas = df2$t_cabezas/100000
df2$machos = df2$machos/100000
df2$hembras = df2$hembras/100000
# --> construct separate plots for each series
obj1 <- xyplot(machos ~ fecha, df2, type = "l" , lwd=2)
obj2 <- xyplot(hembras ~ fecha, df2, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios porcinos machos", "sacrificio porcinos hembras") , add.ylab2 = TRUE)
x = df2$fecha
y = df2$t_cabezas
# plot
ggplot(df, aes(x=date,y=sacrificio_totales))+
geom_line(color = '#69b3a2', size = 1.5, alpha = 0.9)+
theme_ipsum()+
ggtitle('Total de sacrificios porcinos')
x = df2$fecha
y = df2$t_cabezas
# plot
ggplot(df2, aes(x=fecha,y=t_cabezas))+
geom_line(color = '#69b3a2', size = 1.5, alpha = 0.9)+
theme_ipsum()+
ggtitle('Total de sacrificios porcinos')
x = df2$fecha
y = df2$t_cabezas
# plot
ggplot(df2, aes(x=fecha,y=t_cabezas))+
geom_line(color = '#69b3a2', size = 1, alpha = 0.9)+
theme_ipsum()+
ggtitle('Total de sacrificios porcinos')
df2$t_cabezas=df2$t_cabezas/100000
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
df2$t_cabezas=df2$t_cabezas/100000
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
require(kableExtra)
require(tidyverse)
require(ggplot2)
require(hrbrthemes)
require(TSstudio)
require(forecast)
require(latticeExtra)
require(datetime)
library(lubridate)
require(forecast)
library(readxl)
require(forecast)
require(readr)
require(janitor)
df = read_delim("cerdos.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
df = clean_names(df)
df %>% names()
df$mes %>% unique() # Se verifica que no estén repetidos valores
df$mes =as.factor(df$mes)
df$mes %>% levels# Se convierte en factor, cambia el orden
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df$ano = df$ano %>% as.character()
df$date = paste(df$dia,df$mes,df$ano,sep = '-')
df$date = as.Date(df$date, format = '%d-%m-%Y')
# Con esto, se tiene la base de datos lista para trabajar
df = df[order(df$date),] # ordenando por fecha mas vieja
# --> construct separate plots for each series
obj1 <- xyplot(sacrificios_porcinos_machos ~ date, df, type = "l" , lwd=2)
obj2 <- xyplot(sacrificio_porcinos_hembras ~ date, df, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios_porcinos_machos", "sacrificio_porcinos_hembras") , add.ylab2 = TRUE)
x = df$date
y = df$sacrificio_totales
# plot
ggplot(df, aes(x=date,y=sacrificio_totales))+
geom_line(color = '#69b3a2', size = 1.5, alpha = 0.9)+
theme_ipsum()+
ggtitle('Total de sacrificios porcinos')
mod1 = auto.arima(df$sacrificio_totales)
mod1 %>% summary()
acf(df$sacrificio_totales)
Diferencias.modelo = na.omit(diff(df$sacrificio_totales))
acf(Diferencias.modelo)
pacf(df$sacrificio_totales)
dim(df) # La muestra es relativamente pequeña
plot(Diferencias.modelo, type = 'l') # Mejorar grafico
cerditos_2_la_venganza <- read_excel("cerditos 2 la venganza.xls",
sheet = "Cuadro 3", skip = 9)
df2 =cerditos_2_la_venganza
df2 = cerditos_2_la_venganza
df2 = df2 %>% clean_names()
df2 %>% head(3)
df2$t_cabezas = df2$t_cabezas/100000
df2$machos = df2$machos/100000
df2$hembras = df2$hembras/100000
# --> construct separate plots for each series
obj1 <- xyplot(machos ~ fecha, df2, type = "l" , lwd=2)
obj2 <- xyplot(hembras ~ fecha, df2, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios porcinos machos", "sacrificio porcinos hembras") , add.ylab2 = TRUE)
x = df2$fecha
y = df2$t_cabezas
# plot
ggplot(df2, aes(x=fecha,y=t_cabezas))+
geom_line(color = '#69b3a2', size = 1, alpha = 0.9)+
theme_ipsum()+
ggtitle('Total de sacrificios porcinos')
df2$t_cabezas=df2
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
df2$t_cabezas=df2
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
require(dplyr)
require(kableExtra)
require(tidyverse)
require(ggplot2)
require(hrbrthemes)
require(TSstudio)
require(forecast)
require(latticeExtra)
require(datetime)
library(lubridate)
require(forecast)
library(readxl)
require(forecast)
require(readr)
require(janitor)
df2$t_cabezas=df2
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
require(TSstudio)
df2$t_cabezas=df2
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
require(TSstudio)
df2$t_cabezas=df2
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
df2$t_cabezas=df2$t_cabezas
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
df2$t_cabezas=df2$t_cabezas
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
df2$t_cabezas
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
cerditos_2_la_venganza <- read_excel("cerditos 2 la venganza.xls",
sheet = "Cuadro 3", skip = 9)
cerditos_2_la_venganza <- read_excel("cerditos 2 la venganza.xls",
sheet = "Cuadro 3", skip = 9)
df2 =cerditos_2_la_venganza
df2 =cerditos_2_la_venganza
df2 = cerditos_2_la_venganza
df2 = df2 %>% clean_names()
df2$t_cabezas=df2$t_cabezas
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
require(kableExtra)
require(tidyverse)
require(ggplot2)
require(hrbrthemes)
require(TSstudio)
require(forecast)
require(latticeExtra)
require(datetime)
library(lubridate)
require(forecast)
library(readxl)
require(forecast)
require(readr)
require(janitor)
df = read_delim("cerdos.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
df = clean_names(df)
df %>% names()
df$mes %>% unique() # Se verifica que no estén repetidos valores
df$mes =as.factor(df$mes)
df$mes %>% levels# Se convierte en factor, cambia el orden
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df$ano = df$ano %>% as.character()
df$date = paste(df$dia,df$mes,df$ano,sep = '-')
df$date = as.Date(df$date, format = '%d-%m-%Y')
# Con esto, se tiene la base de datos lista para trabajar
df = df[order(df$date),] # ordenando por fecha mas vieja
# --> construct separate plots for each series
obj1 <- xyplot(sacrificios_porcinos_machos ~ date, df, type = "l" , lwd=2)
obj2 <- xyplot(sacrificio_porcinos_hembras ~ date, df, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios_porcinos_machos", "sacrificio_porcinos_hembras") , add.ylab2 = TRUE)
x = df$date
y = df$sacrificio_totales
# plot
ggplot(df, aes(x=date,y=sacrificio_totales))+
geom_line(color = '#69b3a2', size = 1.5, alpha = 0.9)+
theme_ipsum()+
ggtitle('Total de sacrificios porcinos')
mod1 = auto.arima(df$sacrificio_totales)
mod1 %>% summary()
acf(df$sacrificio_totales)
Diferencias.modelo = na.omit(diff(df$sacrificio_totales))
acf(Diferencias.modelo)
pacf(df$sacrificio_totales)
dim(df) # La muestra es relativamente pequeña
plot(Diferencias.modelo, type = 'l') # Mejorar grafico
cerditos_2_la_venganza <- read_excel("cerditos 2 la venganza.xls",
sheet = "Cuadro 3", skip = 9)
df2 =cerditos_2_la_venganza
df2 = cerditos_2_la_venganza
df2 = df2 %>% clean_names()
df2 %>% head(3)
df2$t_cabezas = df2$t_cabezas/100000
df2$machos = df2$machos/100000
df2$hembras = df2$hembras/100000
# --> construct separate plots for each series
obj1 <- xyplot(machos ~ fecha, df2, type = "l" , lwd=2)
obj2 <- xyplot(hembras ~ fecha, df2, type = "l", lwd=2)
# --> Make the plot with second y axis AND legend:
doubleYScale(obj1, obj2, text = c("sacrificios porcinos machos", "sacrificio porcinos hembras") , add.ylab2 = TRUE)
x = df2$fecha
y = df2$t_cabezas
# plot
ggplot(df2, aes(x=fecha,y=t_cabezas))+
geom_line(color = '#69b3a2', size = 1, alpha = 0.9)+
theme_ipsum()+
ggtitle('Total de sacrificios porcinos')
df2$t_cabezas=df2$t_cabezas
vectores <- c(df2$t_cabezas)
dftimeserie <-ts(vectores, frequency = 12)
ggseasonplot(dftimeserie,year.labels=TRUE,continuous=TRUE)
ts_seasonal(diff(dftimeserie), type="box")
ts_seasonal((dftimeserie), type="box")
ts_seasonal(diff(dftimeserie), type="box")
ts_heatmap(dftimeserie, color = "Reds")
ts_heatmap(diff(dftimeserie), color = "Reds")
descompuesta=decompose(dftimeserie)
plot(descompuesta)
descompuesta=decompose(dftimeserie)
plot(descompuesta)
