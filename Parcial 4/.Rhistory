function4(-2:2)),
fun=rep(c("function1","function2","function3","function4"))
)
df
ggplot(z, aes(x=Puerto, y = Total, col = Year)+geom_line()
geom_line()
ggplot(z, aes(x=Puerto, y = Total, col = Year)+
geom_line()
ggplot(z, aes(x=Puerto, y = Total, col = Year)+
ggplot(z, aes(x=Puerto, y = Total, col = Year)+
geom_line()
ggplot(z, aes(x=Puerto, y = Total, col = Year)+
ggplot(z, aes(x=Puerto, y = Total, col = Year))+
geom_line()
ggplot(z, aes(x=c(1:18), y = Total, col = Year))+
geom_line()
ggplot(z, aes(x=c(1:19), y = Total, col = Year))+
geom_line()
ggplot(z, aes(x=c(1:length(z)), y = Total, col = Year))+
geom_line()
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line()
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line()
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line()
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line()+
xlab("A単o (2000-2018)")+
ylab = ("Embarcaciones")+
ggtitle("Puto")
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line()+
xlab("A単o (2000-2018)")+
ylab = ("Embarcaciones")+
ggtitle("Puto")
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line()+
xlab("A単o (2000-2018)")+
ylab = ("Embarcaciones")+
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+geom_line()+xlab("A単o (2000-2018)")+ylab = ("Embarcaciones")+ggtitle("Puto")
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line()+
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line()
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line() +
xlab("skhdas")
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line() +
xlab("skhdas")+
ylab("sdkjfhdsk")
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line() +
xlab("skhdas")+
ylab("sdkjfhdsk")+
ggtitle("jdfnsd")
z= unique(z)
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line() +
xlab("skhdas")+
ylab("sdkjfhdsk")+
ggtitle("jdfnsd")
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
z= unique(z)
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line() +
xlab("Evolucion 2000-20018")+
ylab("Embarcaciones")+
ggtitle("Embarcaciones segun puerto")
a = a[-4,]
z =gather(data = a,key = "Puerto", value = "Total", 2:19) %>% as.data.frame()
z$Total = z$Total/1000
z= unique(z)
ggplot(z, aes(x=c(1:nrow(z)), y = Total, col = Year))+
geom_line() +
xlab("Evolucion 2000-20018")+
ylab("Embarcaciones")+
ggtitle("Embarcaciones segun puerto")+
theme(axis.text.x = element_blank())
400*0.5
400*0.4
setwd("C:/Users/jgarcia/Desktop/Estadistica/Series de tiempo/Parcial 4")
knitr::opts_chunk$set(echo = TRUE)
datos <- read.csv("Nacidos_Vivos_en_Hospital_Manuel_Uribe_Angel.csv")
library(tidyverse)
library(lubridate)
datos <- read.csv("Nacidos_Vivos_en_Hospital_Manuel_Uribe_Angel.csv")
datos$FECHA.NACIMIENTO <- gsub(" \\d+:\\d+:\\d+ .*", "", datos$FECHA.NACIMIENTO)
datos$FECHA.NACIMIENTO <- as.Date(datos$FECHA.NACIMIENTO, format = "%m/%d/%Y")
datos <- datos %>%
mutate(Anio = year(FECHA.NACIMIENTO), semana = week(FECHA.NACIMIENTO)) %>%
group_by(Anio, semana) %>%
summarise(ratio = sum(SEXO != "MASCULINO")/sum(SEXO == "MASCULINO"))
lambda <- forecast::BoxCox.lambda(datos$ratio)
datos$ratio <- forecast::BoxCox(datos$ratio, lambda)
plot(x, type = "l")
library(tidyverse)
library(lubridate)
datos <- read.csv("Nacidos_Vivos_en_Hospital_Manuel_Uribe_Angel.csv")
datos$FECHA.NACIMIENTO <- gsub(" \\d+:\\d+:\\d+ .*", "", datos$FECHA.NACIMIENTO)
datos$FECHA.NACIMIENTO <- as.Date(datos$FECHA.NACIMIENTO, format = "%m/%d/%Y")
datos <- datos %>%
mutate(Anio = year(FECHA.NACIMIENTO), semana = week(FECHA.NACIMIENTO)) %>%
group_by(Anio, semana) %>%
summarise(ratio = sum(SEXO != "MASCULINO")/sum(SEXO == "MASCULINO"))
lambda <- forecast::BoxCox.lambda(datos$ratio)
datos$ratio <- forecast::BoxCox(datos$ratio, lambda)
pacf(datos$ratio)
plot(x, type = "l")
x = datos$ratio
plot(x, type = "l")
?auto.arima
library(forecast)
fit <- mod
mod <- forecast::auto.arima(datos$ratio, seasonal = )
summary(mod)
library(forecast)
fit <- mod
par(mfrow=c(1,2))
plot(arroots(fit),main="Inverse AR roots")
arroots <- function(object)
{
if(!("Arima" %in% class(object)) &
!("ar" %in% class(object)))
stop("object must be of class Arima or ar")
if("Arima" %in% class(object))
parvec <- object$model$phi
else
parvec <- object$ar
if(length(parvec) > 0)
{
last.nonzero <- max(which(abs(parvec) > 1e-08))
if (last.nonzero > 0)
return(structure(list(
roots=polyroot(c(1,-parvec[1:last.nonzero])),
type="AR"),
class='armaroots'))
}
return(structure(list(roots=numeric(0), type="AR"),
class='armaroots'))
}
# Compute MA roots
maroots <- function(object)
{
if(!("Arima" %in% class(object)))
stop("object must be of class Arima")
parvec <- object$model$theta
if(length(parvec) > 0)
{
last.nonzero <- max(which(abs(parvec) > 1e-08))
if (last.nonzero > 0)
return(structure(list(
roots=polyroot(c(1,parvec[1:last.nonzero])),
type="MA"),
class='armaroots'))
}
return(structure(list(roots=numeric(0), type="MA"),
class='armaroots'))
}
plot.armaroots <- function(x, xlab="Real", ylab="Imaginary",
main=paste("Inverse roots of", x$type,
"characteristic polynomial"),
...)
{
oldpar <- par(pty='s')
on.exit(par(oldpar))
plot(c(-1,1), c(-1,1), xlab=xlab, ylab=ylab,
type="n", bty="n", xaxt="n", yaxt="n", main=main, ...)
axis(1, at=c(-1,0,1), line=0.5, tck=-0.025)
axis(2, at=c(-1,0,1), label=c("-i","0","i"),
line=0.5, tck=-0.025)
circx <- seq(-1,1,l=501)
circy <- sqrt(1-circx^2)
lines(c(circx,circx), c(circy,-circy), col='gray')
lines(c(-2,2), c(0,0), col='gray')
lines(c(0,0), c(-2,2), col='gray')
if(length(x$roots) > 0)
{
inside <- abs(x$roots) > 1
points(1/x$roots[inside], pch=19, col='black')
if(sum(!inside) > 0)
points(1/x$roots[!inside], pch=19, col='red')
}
}
library(forecast)
fit <- mod
par(mfrow=c(1,2))
plot(arroots(fit),main="Inverse AR roots")
plot(maroots(fit),main="Inverse MA roots")
install.packages("forecast")
install.packages("forecast")
install.packages("forecast")
knitr::opts_chunk$set(echo = TRUE)
df = read.csv('cerdos.csv)
View(datos)
df = read.csv('cerdos.csv')
df = read.csv('cerdos.csv')
View(df)
df = read.csv('cerdos.csv', sep = ',')
View(df)
df = read.csv('cerdos.csv', sep = ';')
View(df)
require(janitor)
df = clean_names(df)
View(df)
df$mes %>% unique()
month_id = [1:12]
month_id = c(1:12)
month_id
df$mes %>% levels
df$mes %>% levels()
df$mes %>% as.factor
df$mes %>% as.factor %>% levels
d$mes = df$mes %>% as.factor %>% levels # Vamos a cambiar mes a factor
df$mes = df$mes %>% as.factor %>% levels # Vamos a cambiar mes a factor
df$mes = df$mes %>% as.factor %>% levels # Vamos a cambiar mes a factor
df$mes =as.factor(df$mes)
df$mes %>% levels
require(dply)
require(dplyr)
require(dplyr)
levels(df$mes) = month_id
levels(df$mes)
df$mes = df$mes %>% as.character()
df$mes
df %>% View()
View(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
View(df)
month_id = c(1:12)
month_id # una lista d enumeros del 1 al 12, que representa cada mes
df$mes =as.factor(df$mes)
df$mes %>% levels
require(dplyr)
month_id = c(4:12,1,2,3)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
View(df)
4:12
month_id = c(4,8,12,1,2,7,6,3,5,11,10,12)
levels(df$mes) = month_id
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
month_id = c(1:12)
month_id # una lista d enumeros del 1 al 12, que representa cada mes
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,12)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
View(df)
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
df$mes %>% unique()
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
month_id = c(1:12)
month_id # una lista d enumeros del 1 al 12, que representa cada mes
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
df$mes
df$mes %>% levels()
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df %>% View()
1:length(df$ano)
length(df$ano)
?replicate
replicate(?)
?replicate
df$dia = replicate(length(df$ano), '13')
View(df)
?parse
df$dia = replicate(length(df$ano), '13')
df$ano = df$ano %>% as.character()
names(df$ano) = c("year")
df$date = parse()
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
fit <- b
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df$dia = replicate(length(df$ano), '13')
df$dia = replicate(length(df$ano), '13')
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df = df[order(df$date),] # ordenando por fecha mas vieja
df = df[order(df$date),] # ordenando por fecha mas vieja
mod1 = auto.arima(df$sacrificio_totales)
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df = df[order(df$date),] # ordenando por fecha mas vieja
library(tidyverse)
library(lubridate)
datos <- read.csv("Nacidos_Vivos_en_Hospital_Manuel_Uribe_Angel.csv")
datos$FECHA.NACIMIENTO <- gsub(" \\d+:\\d+:\\d+ .*", "", datos$FECHA.NACIMIENTO)
datos$FECHA.NACIMIENTO <- as.Date(datos$FECHA.NACIMIENTO, format = "%m/%d/%Y")
datos <- datos %>%
mutate(Anio = year(FECHA.NACIMIENTO), semana = week(FECHA.NACIMIENTO)) %>%
group_by(Anio, semana) %>%
summarise(ratio = sum(SEXO != "MASCULINO")/sum(SEXO == "MASCULINO"))
lambda <- forecast::BoxCox.lambda(datos$ratio)
datos$ratio <- forecast::BoxCox(datos$ratio, lambda)
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df$dia = replicate(length(df$ano), '13')
df$dia = replicate(length(df$ano), '13')
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df %>% head()
View(df)
knitr::opts_chunk$set(echo = TRUE)
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df = clean_names(df)
df %>% head()
df$mes %>% unique()
df$mes =as.factor(df$mes)
df$mes %>% levels# CUando se convierte en factor, cambia el orden
require(dplyr)
month_id = c(4,8,12,1,2,7,6,3,5,11,10,9)
levels(df$mes) = month_id
df$mes = df$mes %>% as.character()
df$dia = replicate(length(df$ano), '13')
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
require(janitor)
df = read.csv('cerdos.csv', sep = ';')
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';',header = T)
df %>% head()
require(janitor)
df = read.csv('cerdos.csv', sep = ';',header = T)
df = clean_names(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';',header = T)
df = clean_names(df)
require(janitor)
df = read.csv('cerdos.csv', sep = ';',header = T)
df = clean_names(df)
df %>% head()
knitr::opts_chunk$set(echo = TRUE)
df %>% head()
knitr::opts_chunk$set(echo = TRUE)
df = read.csv('cerdos.csv', sep = ';')
View(df)
